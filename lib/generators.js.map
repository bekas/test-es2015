{"version":3,"sources":["../src/generators.js"],"names":[],"mappings":";;;;;;iBAAU,iBAAiB,EAajB,iBAAiB,EAYjB,iBAAiB,EAIjB,gBAAgB,EAsBhB,GAAG;AAnDb,SAAU,iBAAiB;;;;;eACnB,CAAC;;;;eACD,CAAC;;;4CACA,CAAC;;;;;;;CACT;;AAED,IAAI,UAAU,GAAG,iBAAiB,EAAE,CAAC;;AAErC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC/B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC/B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC/B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;;AAE/B,SAAU,iBAAiB;;;;;eACnB,CAAC;;;;eACD,CAAC;;;;eACD,CAAC;;;;;;;CACR;;AAED,IAAI,UAAU,GAAG,iBAAiB,EAAE,CAAC;;;;;;;AAErC,oCAAiB,UAAU,4GAAE;QAArB,KAAK;;AACX,WAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;GACpB;;;;;;;;;;;;;;;;AAED,SAAU,iBAAiB,CAAC,KAAK,EAAE,GAAG;MAC3B,CAAC;;;;AAAD,SAAC,GAAG,KAAK;;;cAAE,CAAC,IAAI,GAAG,CAAA;;;;;;eAAa,CAAC;;;AAAZ,SAAC,EAAE;;;;;;;;;CAClC;;AAED,SAAU,gBAAgB;;;;yCAGjB,iBAAiB,CAAC,EAAE,EAAE,EAAE,CAAC;;;yCAGzB,iBAAiB,CAAC,EAAE,EAAE,EAAE,CAAC;;;yCAGzB,iBAAiB,CAAC,EAAE,EAAE,GAAG,CAAC;;;;;;;CAElC;;AAED,IAAI,GAAG,GAAG,EAAE,CAAC;;;;;;;AAEb,qCAAgB,gBAAgB,EAAE,iHAAE;QAA5B,IAAI;;AACV,OAAG,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;GAClC;;;;;;;;;;;;;;;;AAED,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;AAGjB,SAAU,GAAG;MACP,IAAI,EAIJ,IAAI;;;;;eAJS,QAAQ;;;AAArB,YAAI;;AAER,eAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;;eAED,QAAQ;;;AAArB,YAAI;;AAER,eAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;;;;;;CACnB;;AAED,IAAI,SAAS,GAAG,GAAG,EAAE,CAAC;;AAEtB,OAAO,CAAC,GAAG,CAAE,SAAS,CAAC,IAAI,EAAE,CAAC,KAAK,CAAE,CAAC;;AAEtC,OAAO,CAAC,GAAG,CAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAE,CAAC;;AAEvC,OAAO,CAAC,GAAG,CAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAE,CAAC","file":"generators.js","sourcesContent":["function* generateSequence1() {\r\n  yield 1;\r\n  yield 2; \r\n  return 3;\r\n}\r\n\r\nlet generator1 = generateSequence1();\r\n\r\nconsole.log(generator1.next());\r\nconsole.log(generator1.next());\r\nconsole.log(generator1.next());\r\nconsole.log(generator1.next());\r\n\r\nfunction* generateSequence2() {\r\n  yield 1;\r\n  yield 2;\r\n  yield 3;\r\n}\r\n\r\nlet generator2 = generateSequence2();\r\n\r\nfor(let value of generator2) {\r\n  console.log(value); \r\n}\r\n\r\nfunction* generateSequence3(start, end) {\r\n  for (let i = start; i <= end; i++) yield i;\r\n}\r\n\r\nfunction* generateAlphaNum() {\r\n\r\n  // 0..9\r\n  yield* generateSequence3(48, 57);\r\n\r\n  // A..Z\r\n  yield* generateSequence3(65, 90);\r\n\r\n  // a..z\r\n  yield* generateSequence3(97, 122);\r\n\r\n}\r\n\r\nlet str = '';\r\n\r\nfor(let code of generateAlphaNum()) {\r\n  str += String.fromCharCode(code);\r\n}\r\n\r\nconsole.log(str); \r\n\r\n\r\nfunction* gen() {\r\n  let ask1 = yield \"2 + 2?\";\r\n\r\n  console.log(ask1); \r\n\r\n  let ask2 = yield \"3 * 3?\"\r\n\r\n  console.log(ask2); \r\n}\r\n\r\nlet generator = gen();\r\n\r\nconsole.log( generator.next().value ); \r\n\r\nconsole.log( generator.next(4).value );\r\n\r\nconsole.log( generator.next(9).done ); "]}